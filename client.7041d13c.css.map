{"version":3,"sources":["webpack:///./src/components/App.vue","webpack:///./src/components/EmojiPanel.vue","webpack:///./src/components/Loading.vue"],"names":[],"mappings":"AA8BA,KACA,yBACA,SACA,sIAGA,EACA,sBAGA,EACA,WACA,qBAGA,QACA,0BAKA,sBACA,gBACA,cCkGA,uBACA,gBAGA,4BACA,eACA,gBACA,kBACA,kBAGA,iCACA,yBACA,eACA,cACA,2BAGA,+BACA,aACA,WACA,eACA,kBACA,aACA,yBACA,wBACA,kBACA,UAGA,qCACA,kBAGA,yBACA,iCACA,kCACA,yBACA,gBACA,0BACA,mBACA,sBAGA,wBACA,iCACA,yCACA,eACA,UACA,mBACA,gBACA,iBAGA,8BACA,yBACA,eACA,8BAGA,2CACA,eACA,iBAGA,8BACA,iCAGA,+BACA,kBACA,cACA,sBACA,yBACA,wBACA,yBACA,eACA,gBACA,iBACA,kBAGA,qCACA,yBACA,kBACA,UAGA,6CACA,UAKA,0BACA,gBACA,oBAMA,0DALA,iCACA,yCACA,4CASA,gCALA,qFAIA,eAGA,sCACA,iBAKA,0BACA,qBACA,gBACA,aACA,iBACA,kBACA,2BAGA,gCACA,qBACA,gBACA,gBAGA,uCACA,yBACA,qCACA,YAGA,gDAIA,oCACA,OACA,UACA,CCtQA,kCACA,eAGA,4CAGA,4DALA,iCACA,yCAaA,0BARA,mBACA,yBACA,YACA,eACA,eAGA","file":"client.7041d13c.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <emoji-panel v-if=\"source\" :source=\"source\"></emoji-panel>\n    <loading v-else></loading>\n  </div>\n</template>\n\n<script>\n  import EmojiPanel from './EmojiPanel.vue'\n  import Loading from './Loading.vue'\n\nexport default {\n    name: 'app',\n    data() {\n      return {\n        source: null\n      }\n    },\n    async created() {\n      const emojilib = await import('emojilib')\n      this.source = Object.keys(emojilib.lib).map(name => ({\n        ...emojilib.lib[name],\n        name\n      })).filter(emoji => Boolean(emoji.char))\n    },\n    components: { EmojiPanel, Loading }\n  }\n</script>\n\n<style>\n  body {\n    background-color: #f9f9f9;\n    margin: 0;\n    font: 14px/1.4 -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  a {\n    color: #333;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n</style>\n\n<style scoped>\n  #app {\n    max-width: 700px;\n    margin: 0 auto;\n  }\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/App.vue?827de13a","<template>\n  <div class=\"main\" v-if=\"source\">\n    <github-badge class=\"github-icon\" slug=\"egoist/emoji\" fill=\"#999\"></github-badge>\n    <h1 class=\"site-name\">\n      <span>Emoji Searcher</span>\n    </h1>\n    <div class=\"control\">\n      <label class=\"control-block\">\n        <el-switch v-model=\"useDango\" /> Search with&nbsp;<a target=\"_blank\" href=\"https://getdango.com/\">Dango API</a>\n      </label>\n      <label class=\"control-block\">\n        <el-switch v-model=\"copyEmojiName\" /> Copy emoji name\n      </label>\n    </div>\n    <div class=\"input-group\">\n      <input\n        autofocus\n        type=\"text\"\n        class=\"input-search\"\n        placeholder=\"Type to search...\"\n        ref=\"input\"\n        @input=\"handleChange\"\n        v-model=\"input\">\n        <button v-if=\"searching\" disabled type=\"button\" class=\"button-reset\">\n          <span class=\"loading runner\"></span>\n        </button>\n        <button v-else type=\"button\" class=\"button-reset\" @click=\"handleReset\">\n          Reset\n        </button>\n    </div>\n    <div class=\"emojis\" v-if=\"result.length\">\n      <div\n        v-for=\"emoji in result\"\n        class=\"emoji\"\n        :data-clipboard-text=\"copyEmojiName ? `:${emoji.name}:` : emoji.char\"\n        @mouseover=\"initClipboard\"\n        @mouseout=\"destroyClipboard\">\n        <span class=\"emoji-image\">\n          {{ emoji.char }}\n        </span>\n        <span class=\"emoji-description\">\n          :{{ emoji.name }}:\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Fuse from 'fuse.js'\n  import debounce from 'lodash.debounce'\n  import Clipboard from 'clipboard'\n  import toast from 'native-toast'\n  import GitHubBadge from 'vue-github-badge'\n  import { Switch } from 'element-ui'\n  import fetch from 'unfetch'\n\n  export default {\n    name: 'emoji-panel',\n    props: ['source'],\n    data() {\n      return {\n        keyword: null,\n        category: null,\n        clipboard: null,\n        input: null,\n        useDango: false,\n        copyEmojiName: false,\n        result: this.source.slice(0, 200),\n        searching: false\n      }\n    },\n    syncStore: ['useDango', 'copyEmojiName'],\n    created() {\n      this.$watch('keyword', this.handleUpdate)\n      this.$watch('category', this.handleUpdate)\n      this.$watch('useDango', this.handleUpdate)\n    },\n    methods: {\n      handleChange: debounce(function () {\n        this.keyword = this.input\n      }, 300),\n      async handleUpdate() {\n        this.searching = true\n        let result = this.source\n\n        if (this.category) {\n          result = result.filter(emoji => emoji.category === this.category)\n        }\n\n        if (this.keyword) {\n          if (this.useDango) {\n            try {\n              const { results } = await fetch(`https://emoji.getdango.com/api/emoji?q=${this.keyword}`).then(res => res.json())\n              result = results\n                .map(emoji => this.findEmojiByUnicode(emoji.text))\n                .filter(emoji => Boolean(emoji))\n            } catch (err) {\n              toast({ message: err.message, type: 'error' })\n            }\n          } else {\n            const fuse = new Fuse(result, {\n              keys: ['name', 'keywords'],\n              tokenize: true,\n              shouldSort: true\n            })\n            result = fuse.search(this.keyword).slice(0, 20)\n          }\n        } else if (!this.category) {\n          result = result.slice(0, 200)\n        }\n\n        this.result = result\n        this.searching = false\n      },\n      handleReset() {\n        this.input = null\n        this.keyword = null\n        this.$refs.input.focus()\n      },\n      initClipboard({ currentTarget }) {\n        this.clipboard = new Clipboard(currentTarget)\n        this.clipboard.on('success', e => {\n          toast({ message: `Copied ${e.text}`, type: 'success' })\n        })\n        this.clipboard.on('error', e => {\n          toast({ message: 'Failed to copy!', type: 'error' })\n        })\n      },\n      destroyClipboard() {\n        if (this.clipboard) {\n          this.clipboard.destroy()\n          this.clipboard = null\n        }\n      },\n      findEmojiByUnicode(unicode) {\n        return this.source.filter(emoji => {\n          return emoji.char === unicode\n        })[0]\n      }\n    },\n    components: {\n      'github-badge': GitHubBadge,\n      'el-switch': Switch\n    }\n  }\n</script>\n\n<style src=\"native-toast/dist/native-toast.css\"></style>\n\n<style scoped>\n  .main {\n    margin-top: 80px;\n  }\n\n  .site-name {\n    font-size: 30px;\n    font-weight: 300;\n    text-align: center;\n    position: relative;\n  }\n\n  .site-name span {\n    background-color: #f9f9f9;\n    padding: 0 20px;\n    color: #989898;\n    text-shadow: 0 1px 1px white;\n  }\n\n  .input-search {\n    padding: 10px;\n    width: 100%;\n    font-size: 18px;\n    flex: 4;\n    outline: none;\n    border: 1px solid #e2e2e2;\n    border-radius: 3px 0 0 0px;\n    position: relative;\n    z-index: 1;\n  }\n\n  .input-search:focus {\n    border-color: #ccc;\n  }\n\n  .emojis {\n    display: flex;\n    flex-wrap: wrap;\n    border: 1px solid #e2e2e2;\n    border-top: none;\n    border-radius: 0 0 3px 3px;\n    margin-bottom: 30px;\n    background-color: white;\n  }\n\n  .emoji {\n    display: flex;\n    align-items: center;\n    font-size: 30px;\n    width: 25%;\n    white-space: nowrap;\n    overflow: hidden;\n    padding: 5px 10px;\n  }\n\n  .emoji:hover {\n    background-color: #f0f0f0;\n    cursor: default;\n    box-shadow: inset 0 0 1px #ccc;\n  }\n\n  .emoji .emoji-description {\n    font-size: 14px;\n    margin-left: 10px;\n  }\n\n  .input-group {\n    display: flex;\n  }\n\n  .button-reset {\n    flex: 1;\n    color: #778087;\n    background-color: #fff;\n    border: 1px solid #e2e2e2;\n    border-radius: 0 3px 0 0;\n    background-color: #f9f9f9;\n    font-size: 20px;\n    font-weight: 300;\n    margin-left: -1px;\n    position: relative;\n  }\n\n  .button-reset:hover {\n    background-color: #f0f0f0;\n    border-color: #ccc;\n    z-index: 2;\n  }\n\n  .github-icon:hover svg path {\n    fill: #333;\n  }\n</style>\n\n<style scoped>\n  .control {\n    margin-top: 50px;\n    padding-bottom: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .control-block {\n    user-select: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 10px;\n  }\n\n  .control-block label {\n    margin-right: 5px;\n  }\n</style>\n\n<style scoped>\n  .loading {\n    display: inline-block;\n    overflow: hidden;\n    height: 1.3em;\n    margin-top: -0.3em;\n    line-height: 1.5em;\n    vertical-align: text-bottom;\n  }\n\n  .loading::after {\n    display: inline-table;\n    white-space: pre;\n    text-align: left;\n  }\n\n  .loading.runner::after {\n    content: \"üö∂\\AüèÉ\";\n    animation: spin2 1s steps(2) infinite;\n    width: 1.3em;\n  }\n\n  @keyframes spin2  { to { transform: translateY( -3.0em); } }\n</style>\n\n<style>\n  @media screen and (max-width: 768px) {\n    .emoji {\n      width: 50%;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/EmojiPanel.vue?15901462","<template>\n  <div class=\"loading-wrapper\">\n    <div class=\"loading\">\n      {{ emoji }}\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        count: 1,\n        total: 10\n      }\n    },\n    computed: {\n      emoji() {\n        return 'üî•'.repeat(this.count)\n      }\n    },\n    mounted() {\n      this.timer = setInterval(() => {\n        this.count = ++this.count % this.total\n      }, 200)\n    },\n    beforeDestroy() {\n      clearInterval(this.timer)\n    }\n  }\n</script>\n\n<style scoped>\n  .loading-wrapper {\n    height: 100vmin;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .loading {\n    border-radius: 33px;\n    border: 1px solid #e2e2e2;\n    height: 50px;\n    padding: 0 10px;\n    font-size: 30px;\n    display: flex;\n    align-items: center;\n    width: 300px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Loading.vue?c3c41222"],"sourceRoot":""}